[[backup]]
==  Backing Up and Restoring {nxrm}
{inall}

[[backup-introduction]]
=== Introduction

{nxrm} lets you utilize a scheduled task to aid with backing up your repository manager. Along with your backup
procedure you can configure your repository manager to save the OrientDB databases that store your component
metadata and system configurations.

You can configure this task to export settings and metadata from the underlying OrientDB databases. When running
the task it:

* stores the databases to a new location when configured.
* generates a snapshot of the databases for you to back up, along with the other parts of the repository manager.
* suspends access to the database until the backup is complete.

It is recommended you develop a backup procedure and provide a backup location for your {nxrm}. Finally, you must
synchronize the database exports with other parts of the repository manager that you wish to back up.

This chapter shows you how to configure and execute the tasks as well as to learn how to and recover the exported
databases of your {nxrm}. 

[[backup-preparation]]
=== Preparing a Backup for {nxrm}

The databases that you export have pointers to blob stores, which reside in the data directory and contain components
and assets potentially across multiple repositories. If you don't back them up together the component metadata
can point to non-existent blob stores, or the blob store metadata may be non-descript when attempting to restore
the exported data. So, your backup strategy should involve copying both your databases and blob stores together to
a new location, in order to keep the data intact.

While the backup process is running, {nxrm} will automatically place the database in read-only mode. This is done
for single node deployments to preserve data integrity. While in read-only mode, attempts to publish new components
or make changes to {nxrm} configuration will fail.

{nxrm} will automatically release the read-only status when backup completes. Schedule the backup task
for a time of day that usually has low to no activity to minimize client publishing errors.

Here's a common scenario for backing up custom configurations in tandem with the database export task:

1. Configure the 'Export configuration & metadata for backup' task to export databases.
2. Run the scheduled task to export the databases to the configured folder.
3. Back up custom configurations in your installation and data directories around the same time you run the
export task.
4. Back up all blob stores.
5. Store all backed up configurations and exported data together.

NOTE: Write access to databases is temporarily suspended until a backup is complete. It's advised to schedule
backup tasks during off-hours.

[[backup-task]]
=== Configuring and Running an 'Export configuration & metadata for backup' Task

To configure and run a new task for database backup, review the steps in the Configuration chapter. The form
for this task includes an additional field called 'Backup location', which requires you to enter the path to a
directory where you want to store backup data, shown in <<fig-backup-task>>.

////
Note: removed the anchor/macro referencing tasks due to missing steps addressed in another ticket (bug)  
////

[[fig-backup-task]]
.Manual Export configuration & metadata for backup Task with Directory Location 
image::figs/web/backup-task.png[scale=50]

When the task runs it exports backup data to the path specified in the 'Backup location' field. The directory
you input will contain +.bak+ files of the following databases:

Access log:: login and usage information among repository manager users 
Analytics:: event data and overall repository manager usage
Auditing:: a record of repository manager configuration changes as well as asset or component additions and
removals
Component:: all related data that make up components within the repository manager 
Configuration:: general administrative configurations such as scheduled tasks, email server configuration
Security:: all user and access rights management content

All backup files are presented in the timestamp format based on the time the task was started. 

After you complete the database export and store the files in a secure location, you can restore the exported
files.

[[backup-restore]]
=== Restoring Exported Databases

////
IMPORTANT:: If restoring databases in an HA environment, the steps should be executed on a single node.  All
nodes in an high availability cluster should be stopped prior to restoration.
////

You can restore the exported database files to the state when you ran the scheduled task. This requires you to:

* access the location specified in the `Backup location` field from the `Export configuration & metadata for backup`
task where the databases were exported.
* remove the all of the database directories in order to restore them to the previous state.

The restoration should include all of the databases that were exported during the backup process. The databases should
not be restored individually, and only files from a single backup (i.e. those with the same timestamp) should be used
during restoration.

Start the database restoration with these steps:

1. Stop {nxrm}.
2. Remove the following directories from `$data-dir/nexus3/db`.
  * `accesslog`
  * `analytics`
  * `audit`
  * `component`
  * `config`
  * `security`
3. Go to the location where you stored the exported databases.
4. Copy the corresponding `.bak` files to `$data-dir/nexus3/backup` for restoration.
5. Restart {nxrm}.

You can verify the restoration is complete by viewing the fully-restored databases previously removed from
`$data-dir/nexus3/db`.

NOTE: If the `Component` database is restored, the corresponding blob stores containing components must also be
restored.
